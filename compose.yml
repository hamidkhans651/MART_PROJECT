
name: "basic-mart"
services:
  api:
    build:
      context: ./payment_service
      dockerfile: dockerfile.payment
    container_name: basicMartCont
    ports:
      - "8000:8000"
    volumes:
      - "./payment_service:/code/"   # Volume bind mounting
    depends_on:
      - postgres_db
      - broker

  postgres_db:
    image: postgres:latest
    restart: always
    container_name: basicMartPostgresCont
    environment:
      - POSTGRES_USER=shoaib
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_db:/var/lib/postgresql/data
  

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker


volumes:
  postgres_db:
    driver: local

networks:
  default:
    driver: bridge






















# user:
#     build: 
#       context: ./user-service
#       dockerfile: Dockerfile
#     ports:
#       - 8081:8081
#     depends_on:
#       - kafka
#       - database

#===============================================================================================
  

  # inventory:
  #   build: 
  #     context: ./inventory-services
  #     dockerfile: dockerfile
  #   ports:
  #     - 8002:8000
  #   depends_on:
  #     - kafka
  #     - database


#===============================================================================================
  
  
  # notification:
  #   build: 
  #     context: ./notification-services
  #     dockerfile: dockerfile
  #   ports:
  #     - 8003:8000
  #   depends_on:
  #     - kafka
  #     - database


#===============================================================================================
  
  
  # order:
  #   build: 
  #     context: ./order-services
  #     dockerfile: dockerfile
  #   ports:
  #     - 8004:8000
  #   depends_on:
  #     - kafka
  #     - database


#===============================================================================================
  
  # payment:
  #   build: 
  #     context: ./payment-services
  #     dockerfile: dockerfile
  #   ports:
  #     - 8005:8000
  #   depends_on:
  #     - kafka
  #     - database


#===============================================================================================
  
  
  # product:
  #   build: 
  #     context: ./product-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - 8082:8082
  #   depends_on:
  #     - kafka
  #     - database

  
#===============================================================================================